# Функция parity_check проверяет, является ли число четным
def parity_check(num):
    # Возвращает True, если остаток от деления на 2 равен 0, т.е. число четное
    return num % 2 == 0

# Функция shift_right сдвигает число вправо на 1 бит, что эквивалентно делению на 2
def shift_right(num):
    # Использует оператор побитового сдвига вправо для деления на 2
    return num >> 1

# Функция gcd вычисляет наибольший общий делитель (НОД) двух чисел
def gcd(a, b):
    # Если b равно 0, то возвращаем a (НОД найден)
    if b == 0:
        return a

    # Если оба числа четные, то можно сокращать их, деля на 2, и умножать результат на 2
    if parity_check(a) and parity_check(b):
        return gcd(shift_right(a), shift_right(b)) << 1

    # Если a четное, то можно сокращать его, деля на 2
    elif parity_check(a):
        return gcd(shift_right(a), b)

    # Если b четное, то можно сокращать его, деля на 2
    elif parity_check(b):
        return gcd(a, shift_right(b))

    # Если оба числа нечетные, то использует алгоритм Евклида
    else:
        return gcd(b, a % b)

# Функция calculate_gcd вычисляет НОД двух чисел
def calculate_gcd(a, b):
    # Устанавливаем a в значение 8
    a = 8
    try:
        # Пытаемся преобразовать b в целое число
        b = int(b)
        # Проверяем, что b является положительным целым числом с 10 цифрами
        if b <= 0 or b > 9999999999:
            raise ValueError("Число должно быть целым положительным 10-значным.")
        # Вызываем функцию gcd для вычисления НОД
        return gcd(a, b)
    except ValueError as e:
        # Если возникла ошибка, выводим ее на экран
        print(f"Ошибка: {e}")
        return None

# Запрашиваем ввод числа от пользователя
num = input()

# Проверяем, что введенное число является целым положительным 10-значным
if num.isdigit() and len(num) == 10:
    # Вычисляем НОД числа 8 и введенного числа
    print("НОД числа 8 и", num, "равен:", calculate_gcd(8, num))
else:
    # Выводим сообщение об ошибке, если число не соответствует требуемым условиям
    print("Ошибка: Число должно быть целым положительным и 10-значным.")
