from flask import Flask, render_template, request, redirect, url_for, session, jsonify
import uuid, os, time, random

app = Flask(__name__)
app.secret_key = os.environ.get('SECRET_KEY') or 'default_secret_key'
user_data = {}

words_igr = {
    "Базовый набор": {
        "1": "Яблоко",
        "2": "Книга",
        "3": "Солнце",
        "4": "Дом",
        "5": "Кошка",
        "6": "Машина",
        "7": "Цветок",
        "8": "Дерево",
        "9": "Море",
        "10": "Птица",
        "11": "Стол",
        "12": "Стул",
        "13": "Компьютер",
        "14": "Жонглёр",
        "15": "Вопрос",
        "16": "Лужа",
        "17": "Ответ",
        "18": "Телевизор",
        "19": "Музыка",
        "20": "Спорт",
        "21": "Танец",
        "22": "Смех",
        "23": "Друг",
        "24": "Семья",
        "25": "Любовь",
        "26": "Мечта",
        "27": "Латте",
        "28": "Путешествие",
        "29": "Радуга",
        "30": "Снег",
        "31": "Ветер",
        "32": "Наклейка",
        "33": "Мир",
        "34": "Татуировка",
        "35": "Гроза",
        "36": "Мистика",
        "37": "Луна",
        "38": "Звезды",
        "39": "Мусор",
        "40": "Огонь",
        "41": "Вода",
        "42": "Земля",
        "43": "Небо",
        "44": "Облако",
        "45": "Дождь",
        "46": "Гора",
        "47": "Река",
        "48": "Пыль",
        "49": "Трава",
        "50": "Пылесос",
        "51": "Уборка",
        "52": "Кольцо",
        "53": "Динозавр",
        "54": "Озеро",
        "55": "Лес",
        "56": "Поле",
        "57": "Сад",
        "58": "Город",
        "59": "Деревня",
        "60": "Улица",
        "61": "Площадь",
        "62": "Парк",
        "63": "Магазин",
        "64": "Ресторан",
        "65": "Кафе",
        "66": "Театр",
        "67": "Лист",
        "68": "Музей",
        "69": "Больница",
        "70": "Школа",
        "71": "Университет",
        "72": "Офис",
        "73": "Завод",
        "74": "Ферма",
        "75": "Корабль",
        "76": "Самолет",
        "77": "Цирк",
        "78": "Клоун",
        "79": "Король",
        "80": "Шахматы",
        "81": "Пешка",
        "82": "Кнопка",
        "83": "Гирлянда",
        "84": "Салют",
        "85": "Поезд",
        "86": "Велосипед",
        "87": "Мотоцикл",
        "88": "Автобус",
        "89": "Троллейбус",
        "90": "Метро",
        "91": "Журнал",
        "92": "Газета",
        "93": "Письмо",
        "94": "Ручка",
        "95": "Тетрадь",
        "96": "Карандаш",
        "97": "Бумага",
        "98": "Ножницы",
        "99": "Клей",
        "100": "Краски",
        "101": "Кисть",
        "102": "Карта",
        "103": "Глобус",
        "104": "Часы",
        "105": "Время",
        "106": "Будильник",
        "107": "Календарь",
        "108": "Фотоаппарат",
        "109": "Видеокамера",
        "110": "Микрофон",
        "111": "Наушники",
        "112": "Гитара",
        "113": "Пианино",
        "114": "Барабаны",
        "115": "Скрипка",
        "116": "Флейта",
        "117": "Труба",
        "118": "Скрипка",
        "119": "Одежда",
        "120": "Рубашка",
        "121": "Брюки",
        "122": "Юбка",
        "123": "Платье",
        "124": "Обувь",
        "125": "Шапка",
        "126": "Шарф",
        "127": "Перчатки",
        "128": "Зонт",
        "129": "Сумка",
        "130": "Очки",
        "131": "Украшения",
        "132": "Еда",
        "133": "Хлеб",
        "134": "Наука",
        "135": "Молоко",
        "136": "Мясо",
        "137": "Рыба",
        "138": "Овощи",
        "139": "Фрукты",
        "140": "Сыр",
        "141": "Детство",
        "142": "Сериал",
        "143": "Яйца",
        "144": "Сахар",
        "145": "Соль",
        "146": "Специи",
        "147": "Чай",
        "148": "Кофе",
        "149": "Сок",
        "150": "Вино",
        "151": "Пиво",
        "152": "Торт",
        "153": "Мороженое",
        "154": "Конфеты",
        "155": "Печенье",
        "156": "Пицца",
        "157": "Гамбургер",
        "158": "Салат",
        "159": "Суп",
        "160": "Каша",
        "161": "Рис",
        "162": "Паста",
        "163": "Имя",
        "164": "Люстра",
        "165": "Пол",
        "166": "Потолок",
        "167": "Преступление",
        "168": "Наказание",
        "169": "Мина",
        "170": "Солдат",
        "171": "Война",
        "172": "Интервью",
        "173": "Крик",
        "174": "Мультик",
        "175": "Мебель",
        "176": "Кровать",
        "177": "Диван",
        "178": "Кресло",
        "179": "Шкаф",
        "180": "Тумбочка",
        "181": "Комод",
        "182": "Зеркало",
        "183": "Ковер",
        "184": "Занавески",
        "185": "Лампа",
        "186": "Картина",
        "187": "Ваза",
        "188": "Подушка",
        "189": "Одеяло",
        "190": "Полотенце",
        "191": "Животные",
        "192": "Собака",
        "193": "Кошка",
        "194": "Лошадь",
        "195": "Корова",
        "196": "Овца",
        "197": "Коза",
        "198": "Свинья",
        "199": "Курица",
        "200": "Утка",
        "201": "Гусь",
        "202": "Кролик",
        "203": "Хомяк",
        "204": "Рыба",
        "205": "Птица",
        "206": "Змея",
        "207": "Лягушка",
        "208": "Черепаха",
        "209": "Бабочка",
        "210": "Муравей",
        "211": "Пчела",
        "212": "Паук",
        "213": "Насекомые",
        "214": "Цвета",
        "215": "Красный",
        "216": "Синий",
        "217": "Зеленый",
        "218": "Желтый",
        "219": "Оранжевый",
        "220": "Белый",
        "221": "Черный",
        "222": "Коричневый",
        "223": "Розовый",
        "224": "Голубой",
        "225": "Сирень",
        "226": "Золото",
        "227": "Серебро",
        "228": "Елка",
        "229": "Год",
        "230": "Танк",
        "231": "Пистолет",
        "232": "Тюрьма",
        "233": "Балл",
        "234": "Профессии",
        "235": "Врач",
        "236": "Учитель",
        "237": "Инженер",
        "238": "Повар",
        "239": "Водитель",
        "240": "Литература",
        "241": "Борода",
        "242": "Нос",
        "243": "Молитва",
        "244": "Очаг",
        "245": "Полицейский",
        "246": "Пожарный",
        "247": "Пожар",
        "248": "Строитель",
        "249": "Художник",
        "250": "Музыкант",
        "251": "Актер",
        "252": "Писатель",
        "253": "Журналист",
        "254": "Программист",
        "255": "Ученый",
        "256": "Спортсмен",
        "257": "Бизнесмен",
        "258": "Продавец",
        "259": "Парикмахер",
        "260": "Повар",
        "261": "Фермер",
        "262": "Садовник",
        "263": "Электрик",
        "264": "Сантехник",
        "265": "Лента",
        "266": "Заяц",
        "267": "Юрист",
        "268": "Лебедь",
        "269": "Психолог",
        "270": "Бесконечность",
        "271": "Окно",
        "272": "Дверь",
        "273": "Колонка",
        "274": "Холодильник",
        "275": "Жара",
        "276": "Холод",
        "277": "Директор",
        "278": "Экзамен",
        "279": "Архитектор",
        "280": "Дизайнер",
        "281": "Физкультура",
        "282": "Бег",
        "283": "Болезнь",
        "284": "Фотограф",
        "285": "Помада",
        "286": "Фильм",
        "287": "Режиссер",
        "288": "Танцор",
        "289": "Певец",
        "290": "Художник",
        "291": "Скульптор",
        "292": "Ремесленник",
        "293": "Чувства",
        "294": "Счастье",
        "295": "Эмоции",
        "296": "Радость",
        "297": "Слезы",
        "298": "Уважение",
        "299": "Преподаватель",
        "300": "Тарелка"
    },
    "IT": {
        "1": "Криптография",
        "2": "Алгоритм",
        "3": "Веб-сервер",       
        "4": "Дизайн",
        "5": "Интерфейс",        
        "6": "Аутентификация",   
        "7": "Блокчейн",
        "8": "Виртуализация",    
        "9": "Драйвер",
        "10": "Кластер",
        "11": "Программирование",
        "12": "Микросервис",     
        "13": "Резервирование",  
        "14": "Шифрование",      
        "15": "Хостинг",
        "16": "Сеть",
        "17": "Протокол",        
        "18": "Платформа",
        "19": "Бэкап",
        "20": "Разработка",
        "21": "Модуль",
        "22": "Мобильный",
        "23": "Фреймворк",
        "24": "Кодирование",
        "25": "Публикация",
        "26": "Интеграция",
        "27": "Хранилище",
        "28": "База",
        "29": "данных",
        "30": "Сегментация",
        "31": "Аналитика",
        "32": "Архитектура",
        "33": "Развертывание",
        "34": "Тестирование",
        "35": "Автоматизация",
        "36": "Компиляция",
        "37": "Мониторинг",
        "38": "Эксплуатация",
        "39": "Веб-разработка",
        "40": "Доступность",
        "41": "Масштабирование",
        "42": "Многопоточность",
        "43": "Поток",
        "44": "Сервер",
        "45": "Хакер",
        "46": "Доступ",
        "47": "Интеграция",
        "48": "Рефакторинг",
        "49": "Компонент",
        "50": "Контроль",
        "51": "Уязвимость",
        "52": "Логика",
        "53": "Оптимизация",
        "54": "Восстановление",
        "55": "Шаблон",
        "56": "Клиент",
        "57": "Обновление",
        "58": "Эксперт",
        "59": "Конфигурация",
        "60": "Информация",
        "61": "Программа",
        "62": "Безопасность",
        "63": "Поток",
        "64": "Устройство",
        "65": "Разработчик",
        "66": "Консоль",
        "67": "Синтаксис",
        "68": "Компьютер",
        "69": "Сервис",
        "70": "Контроль",
        "71": "Интернет",
        "72": "Домен",
        "73": "Домен",
        "74": "Кеширование",
        "75": "Восстановление",
        "76": "Код",
        "77": "Память",
        "78": "Сервер",
        "79": "Сборка",
        "80": "Визуализация",
        "81": "База",
        "82": "данных",
        "83": "Процесс",
        "84": "Операция",
        "85": "Микросервис",
        "86": "Фронтенд",
        "87": "Бекенд",
        "88": "Хостинг",
        "89": "Операционная",
        "90": "система",
        "91": "Инфраструктура",
        "92": "Сеть",
        "93": "Безопасность",
        "94": "Компилятор",
        "95": "Интерфейс",
        "96": "Клиент",
        "97": "Контейнер",
        "98": "Обработка",
        "99": "Дизайн",
        "100": "Цифровой",
        "101": "Программирование",
        "102": "Веб-сайт",
        "103": "Архивация",
        "104": "Интеграция",
        "105": "Шифрование",
        "106": "Платформа",
        "107": "Протокол",
        "108": "Разработка",
        "109": "Моделирование",
        "110": "Отладка",
        "111": "Интерпретатор",
        "112": "Сеть",
        "113": "Периферия",
        "114": "Технология",
        "115": "Анализ",
        "116": "Разработчик",
        "117": "Журналирование",
        "118": "Параллелизм",
        "119": "Браузер",
        "120": "Программирование",
        "121": "Информация",
        "122": "Репозиторий",
        "123": "Чатбот",
        "124": "Обработка",
        "125": "Автоматизация",
        "126": "Масштабирование",
        "127": "Интерфейс",
        "128": "Фронтенд",
        "129": "Бекенд",
        "130": "Документация",
        "131": "Поддержка",
        "132": "Резервирование",
        "133": "Анализ",
        "134": "Плагин",
        "135": "Хостинг",
        "136": "Алгоритм",
        "137": "Код",
        "138": "Интеграция",
        "139": "Структура",
        "140": "Сегментация",
        "141": "Аутентификация",
        "142": "Виртуализация",
        "143": "Драйвер",
        "144": "Микросервис",
        "145": "Аналитика",
        "146": "Кластер",
        "147": "Протокол",
        "148": "Блокчейн",
        "149": "Архитектура",
        "150": "Сеть",
        "151": "Дизайн",
        "152": "Шифрование",
        "153": "Веб-сервер",
        "154": "Платформа",
        "155": "Криптография",
        "156": "Бэкап",
        "157": "Разработка",
        "158": "Программирование",
        "159": "Модуль",
        "160": "Кодирование",
        "161": "Веб-разработка",
        "162": "Мобильный",
        "163": "Программа",
        "164": "Развертывание",
        "165": "Хранилище",
        "166": "Мониторинг",
        "167": "Автоматизация",
        "168": "Тестирование",
        "169": "База",
        "170": "данных",
        "171": "Сервер",
        "172": "Масштабирование",
        "173": "Логика",
        "174": "Компонент",
        "175": "Информация",
        "176": "Хостинг",
        "177": "Клиент",
        "178": "Обновление",
        "179": "Компьютер",
        "180": "Интернет",
        "181": "Домен",
        "182": "Кеширование",
        "183": "Память",
        "184": "Визуализация",
        "185": "Сборка",
        "186": "Операция",
        "187": "Безопасность",
        "188": "Инфраструктура",
        "189": "Компилятор",
        "190": "Контейнер",
        "191": "Дизайн",
        "192": "Программирование",
        "193": "Протокол",
        "194": "Разработка",
        "195": "Отладка",
        "196": "Сеть",
        "197": "Технология",
        "198": "Журналирование",
        "199": "Браузер",
        "200": "Репозиторий",
        "201": "Чатбот",
        "202": "Масштабирование",
        "203": "Бекенд",
        "204": "Фронтенд",
        "205": "Документация",
        "206": "Анализ",
        "207": "Резервирование",
        "208": "Плагин",
        "209": "Аутентификация",
        "210": "Драйвер",
        "211": "Виртуализация",
        "212": "Кластер",
        "213": "Аналитика",
        "214": "Шифрование",
        "215": "Архитектура",
        "216": "Структура",
        "217": "Сегментация",
        "218": "Код",
        "219": "Интеграция",
        "220": "Блокчейн",
        "221": "Платформа",
        "222": "Веб-сервер",
        "223": "Криптография",
        "224": "Программирование",
        "225": "Бэкап",
        "226": "Модуль",
        "227": "Кодирование",
        "228": "Мобильный",
        "229": "Веб-разработка",
        "230": "Программа",
        "231": "Развертывание",
        "232": "Хранилище",
        "233": "Мониторинг",
        "234": "Автоматизация",
        "235": "Тестирование",
        "236": "База",
        "237": "данных",
        "238": "Сервер",
        "239": "Масштабирование",
        "240": "Логика",
        "241": "Компонент",
        "242": "Информация",
        "243": "Хостинг",
        "244": "Клиент",
        "245": "Обновление",
        "246": "Компьютер",
        "247": "Интернет",
        "248": "Домен",
        "249": "Кеширование",
        "250": "Память",
        "251": "Визуализация",
        "252": "Сборка",
        "253": "Операция",
        "254": "Безопасность",
        "255": "Инфраструктура",
        "256": "Компилятор",
        "257": "Контейнер",
        "258": "Дизайн",
        "259": "Программирование",
        "260": "Протокол",
        "261": "Разработка",
        "262": "Отладка",
        "263": "Сеть",
        "264": "Технология",
        "265": "Журналирование",
        "266": "Браузер",
        "267": "Репозиторий",
        "268": "Чатбот",
        "269": "Масштабирование",
        "270": "Бекенд",
        "271": "Фронтенд",
        "272": "Документация",
        "273": "Анализ",
        "274": "Резервирование",
        "275": "Плагин",
        "276": "Аутентификация",
        "277": "Драйвер",
        "278": "Виртуализация",
        "279": "Кластер",
        "280": "Аналитика",
        "281": "Шифрование",
        "282": "Архитектура",
        "283": "Структура",
        "284": "Сегментация",
        "285": "Код",
        "286": "Интеграция",
        "287": "Блокчейн",
        "288": "Платформа",
        "289": "Веб-сервер",
        "290": "Криптография",
        "291": "Программирование",
        "292": "Бэкап",
        "293": "Модуль",
        "294": "Кодирование",
        "295": "Мобильный",
        "296": "Веб-разработка",
        "297": "Программа",
        "298": "Развертывание",
        "299": "Хранилище",
        "300": "Мониторинг"
    },
    "Юриспруденция": {
        "1": "Закон",
        "2": "Суд",
        "3": "Юрист",
        "4": "Дело",
        "5": "Право",
        "6": "Адвокат",
        "7": "Лицензия",
        "8": "Свидетель",
        "9": "Договор",
        "10": "Судья",
        "11": "Преступление",
        "12": "Исполнение",
        "13": "Жалоба",
        "14": "Освобождение",
        "15": "Обвинение",
        "16": "Ответчик",
        "17": "Истец",
        "18": "Прокурор",
        "19": "Арбитраж",
        "20": "Конституция",
        "21": "Апелляция",
        "22": "Уголовный",
        "23": "Гражданский",
        "24": "Правонарушение",
        "25": "Юридический",
        "26": "Свидетельство",
        "27": "Имущество",
        "28": "Конфликт",
        "29": "Импичмент",
        "30": "Защита",
        "31": "Обвинитель",
        "32": "Свидетельство",
        "33": "Расследование",
        "34": "Доказательство",
        "35": "Претензия",
        "36": "Консультация",
        "37": "Подсудимый",
        "38": "Дознание",
        "39": "Тюрьма",
        "40": "Претензия",
        "41": "Наказание",
        "42": "Административный",
        "43": "Судебный",
        "44": "Компенсация",
        "45": "Лишение",
        "46": "Условие",
        "47": "Акт",
        "48": "Иммунитет",
        "49": "Соглашение",
        "50": "Переговоры",
        "51": "Медиация",
        "52": "Охрана",
        "53": "Свобода",
        "54": "Виновность",
        "55": "Оправдание",
        "56": "Пособие",
        "57": "Обязательство",
        "58": "Контракт",
        "59": "Устав",
        "60": "Иск",
        "61": "Ответ",
        "62": "Регулирование",
        "63": "Статут",
        "64": "Лицензирование",
        "65": "Уполномоченный",
        "66": "Доверенность",
        "67": "Членство",
        "68": "Подпись",
        "69": "Орган",
        "70": "Налог",
        "71": "Собственность",
        "72": "Конфискация",
        "73": "Иммунитет",
        "74": "Довод",
        "75": "Судопроизводство",
        "76": "Правоприменение",
        "77": "Акт",
        "78": "Уголовник",
        "79": "Юриспруденция",
        "80": "Консультация",
        "81": "Судебный",
        "82": "Окружение",
        "83": "Представитель",
        "84": "Субъект",
        "85": "Арест",
        "86": "Обязанность",
        "87": "Разрешение",
        "88": "Свидетельство",
        "89": "Заявление",
        "90": "Подсудимый",
        "91": "Подсудимый",
        "92": "Статус",
        "93": "Дееспособность",
        "94": "Апелляция",
        "95": "Адвокатура",
        "96": "Жалоба",
        "97": "Исполнитель",
        "98": "Решение",
        "99": "Участник",
        "100": "Условие",
        "101": "Делегация",
        "102": "Представительство",
        "103": "Лицензирование",
        "104": "Дознание",
        "105": "Орган",
        "106": "Претензия",
        "107": "Свидетельство",
        "108": "Исполнитель",
        "109": "Обвинитель",
        "110": "Расследование",
        "111": "Правоохранительный",
        "112": "Свидетельство",
        "113": "Оправдание",
        "114": "Инстанция",
        "115": "Ущерб",
        "116": "Освобождение",
        "117": "Конституционный",
        "118": "Соучастник",
        "119": "Условие",
        "120": "Долг",
        "121": "Урегулирование",
        "122": "Имущество",
        "123": "Уполномоченный",
        "124": "Документ",
        "125": "Примирение",
        "126": "Ответственность",
        "127": "Акционер",
        "128": "Регистрация",
        "129": "Правонарушение",
        "130": "Срок",
        "131": "Обвинение",
        "132": "Повреждение",
        "133": "Соглашение",
        "134": "Юридический",
        "135": "Налог",
        "136": "Лишение",
        "137": "Взыскание",
        "138": "Уголовный",
        "139": "Адвокатский",
        "140": "Иммунитет",
        "141": "Исключение",
        "142": "Ответ",
        "143": "Избрание",
        "144": "Присяга",
        "145": "Соглашение",
        "146": "Консультация",
        "147": "Лицензия",
        "148": "Отвод",
        "149": "Должность",
        "150": "Осуждение",
        "151": "Прекращение",
        "152": "Ревизия",
        "153": "Арест",
        "154": "Прокурор",
        "155": "Уполномоченный",
        "156": "Исполнение",
        "157": "Условие",
        "158": "Переговоры",
        "159": "Лицензия",
        "160": "Решение",
        "161": "Законность",
        "162": "Иск",
        "163": "Развод",
        "164": "Преступность",
        "165": "Задержание",
        "166": "Иммунитет",
        "167": "Избрание",
        "168": "Участник",
        "169": "Налог",
        "170": "Подсудимый",
        "171": "Пособие",
        "172": "Обвинение",
        "173": "Статус",
        "174": "Довод",
        "175": "Свидетель",
        "176": "Правонарушение",
        "177": "Конституция",
        "178": "Арбитраж",
        "179": "Освобождение",
        "180": "Подписание",
        "181": "Исполнитель",
        "182": "Лицензия",
        "183": "Исполнение",
        "184": "Урегулирование",
        "185": "Дееспособность",
        "186": "Освидетельствование",
        "187": "Исполнитель",
        "188": "Подтверждение",
        "189": "Претензия",
        "190": "Адвокатура",
        "191": "Свидетельство",
        "192": "Заявление",
        "193": "Подсудимый",
        "194": "Условие",
        "195": "Делегация",
        "196": "Разбирательство",
        "197": "Оправдание",
        "198": "Рассмотрение",
        "199": "Срок",
        "200": "Лицензирование",
        "201": "Доказательство",
        "202": "Представительство",
        "203": "Компетенция",
        "204": "Документ",
        "205": "Участие",
        "206": "Инстанция",
        "207": "Уведомление",
        "208": "Акция",
        "209": "Ответственность",
        "210": "Судья",
        "211": "Отвод",
        "212": "Уполномоченный",
        "213": "Осуждение",
        "214": "Взыскание",
        "215": "Правонарушение",
        "216": "Адвокатский",
        "217": "Ответ",
        "218": "Консультация",
        "219": "Прокурор",
        "220": "Иммунитет",
        "221": "Условие",
        "222": "Освобождение",
        "223": "Исполнитель",
        "224": "Примирение",
        "225": "Подсудимый",
        "226": "Решение",
        "227": "Прекращение",
        "228": "Арест",
        "229": "Судопроизводство",
        "230": "Правоохранительный",
        "231": "Переговоры",
        "232": "Регистрация",
        "233": "Соглашение",
        "234": "Лицензия",
        "235": "Исключение",
        "236": "Ответственность",
        "237": "Присяга",
        "238": "Консультация",
        "239": "Правонарушение",
        "240": "Условие",
        "241": "Развод",
        "242": "Иммунитет",
        "243": "Преступность",
        "244": "Участник",
        "245": "Пособие",
        "246": "Прокурор",
        "247": "Ревизия",
        "248": "Задержание",
        "249": "Правонарушение",
        "250": "Арбитраж",
        "251": "Освобождение",
        "252": "Исполнитель",
        "253": "Право",
        "254": "Дееспособность",
        "255": "Освидетельствование",
        "256": "Исполнение",
        "257": "Разбирательство",
        "258": "Исполнитель",
        "259": "Адвокатура",
        "260": "Подсудимый",
        "261": "Делегация",
        "262": "Рассмотрение",
        "263": "Срок",
        "264": "Документ",
        "265": "Участие",
        "266": "Судья",
        "267": "Уведомление",
        "268": "Ответственность",
        "269": "Отвод",
        "270": "Осуждение",
        "271": "Взыскание",
        "272": "Правонарушение",
        "273": "Ответ",
        "274": "Прокурор",
        "275": "Условие",
        "276": "Освобождение",
        "277": "Примирение",
        "278": "Подсудимый",
        "279": "Решение",
        "280": "Судопроизводство",
        "281": "Переговоры",
        "282": "Регистрация",
        "283": "Соглашение",
        "284": "Исключение",
        "285": "Присяга",
        "286": "Консультация",
        "287": "Правонарушение",
        "288": "Развод",
        "289": "Условие",
        "290": "Преступность",
        "291": "Пособие",
        "292": "Ревизия",
        "293": "Задержание",
        "294": "Правонарушение",
        "295": "Освобождение",
        "296": "Исполнитель",
        "297": "Дееспособность",
        "298": "Исполнение",
        "299": "Разбирательство",
        "300": "Исполнитель"
    },
    "Новый год": {
        "1": "Праздник",
        "2": "Подарки",
        "3": "Снег",
        "4": "Ёлка",
        "5": "Веселье",
        "6": "Семья",
        "7": "Свет",
        "8": "Мандарины",
        "9": "Украшения",
        "10": "Мороз",
        "11": "Шампанское",
        "12": "Шары",
        "13": "Поздравления",
        "14": "Празднование",
        "15": "Ярмарка",
        "16": "Музыка",
        "17": "Счастье",
        "18": "Хлопушки",
        "19": "Звезды",
        "20": "Праздничный",
        "21": "Маскарад",
        "22": "Танцы",
        "23": "Пир",
        "24": "Волшебство",
        "25": "Подснежники",
        "26": "Бенгальский",
        "27": "Наступление",
        "28": "Масленица",
        "29": "Банкет",
        "30": "Встреча",
        "31": "Костюмы",
        "32": "Фейерверк",
        "33": "Ночь",
        "34": "Пьянство",
        "35": "Воскрешение",
        "36": "Будущее",
        "37": "Огни",
        "38": "Детство",
        "39": "Сюрпризы",
        "40": "Приключения",
        "41": "Стремление",
        "42": "Ближние",
        "43": "Каникулы",
        "44": "Рождество",
        "45": "Зима",
        "46": "Праздничный",
        "47": "Печенье",
        "48": "Каникулы",
        "49": "Собрание",
        "50": "Обмен",
        "51": "Чудо",
        "52": "Традиция",
        "53": "Великолепие",
        "54": "Подвески",
        "55": "Праздничный",
        "56": "Благословение",
        "57": "Надежда",
        "58": "Календарь",
        "59": "Желания",
        "60": "Подвиг",
        "61": "Союз",
        "62": "Свечи",
        "63": "Серпантин",
        "64": "Воспоминания",
        "65": "Принцесса",
        "66": "Гости",
        "67": "Удовольствие",
        "68": "Время",
        "69": "Замороженный",
        "70": "Вечеринка",
        "71": "Вдохновение",
        "72": "Жаркое",
        "73": "Заинтересование",
        "74": "Проявление",
        "75": "Поцелуй",
        "76": "Пожелание",
        "77": "Согласие",
        "78": "Игры",
        "79": "Страсть",
        "80": "Камин",
        "81": "Шарф",
        "82": "Театр",
        "83": "Карнавал",
        "84": "Ожидание",
        "85": "Новогодний",
        "86": "Лёд",
        "87": "Каникулы",
        "88": "Посвящение",
        "89": "Мечта",
        "90": "Стрельба",
        "91": "Подношение",
        "92": "Декорации",
        "93": "Таинственность",
        "94": "Очарование",
        "95": "Провожание",
        "96": "Подвески",
        "97": "Благополучие",
        "98": "Пирог",
        "99": "Старый",
        "100": "Восторг",
        "101": "Банкет",
        "102": "Утро",
        "103": "Легенда",
        "104": "Маска",
        "105": "Хрусталь",
        "106": "Картина",
        "107": "Захват",
        "108": "Начало",
        "109": "Чувство",
        "110": "Пирушка",
        "111": "Дом",
        "112": "Друзья",
        "113": "Стук",
        "114": "Праздничный",
        "115": "Луна",
        "116": "Радость",
        "117": "Вино",
        "118": "Коробка",
        "119": "Пожелание",
        "120": "Таинство",
        "121": "Стол",
        "122": "Новинка",
        "123": "Поход",
        "124": "Великан",
        "125": "Подготовка",
        "126": "Забава",
        "127": "Тоска",
        "128": "Веер",
        "129": "Маска",
        "130": "Санки",
        "131": "Заклинание",
        "132": "Сюрприз",
        "133": "Стресс",
        "134": "Тост",
        "135": "Лакомство",
        "136": "Королевство",
        "137": "Увлечение",
        "138": "Стихия",
        "139": "Почерк",
        "140": "Подруга",
        "141": "Необычайное",
        "142": "Жар",
        "143": "Комета",
        "144": "Чудеса",
        "145": "Бриллиант",
        "146": "Мечты",
        "147": "Занятие",
        "148": "Слово",
        "149": "Благословение",
        "150": "Золото",
        "151": "Ритуал",
        "152": "Очарование",
        "153": "Одуванчик",
        "154": "Мечта",
        "155": "Холод",
        "156": "Долгожданный",
        "157": "Тайна",
        "158": "Гармония",
        "159": "Вдохновение",
        "160": "Встреча",
        "161": "Любовь",
        "162": "Минута",
        "163": "Праздничный",
        "164": "Бал",
        "165": "Фея",
        "166": "Искра",
        "167": "Мороженое",
        "168": "Увлечение",
        "169": "Романтика",
        "170": "Лампион",
        "171": "Взлет",
        "172": "Лавина",
        "173": "Мечта",
        "174": "Приключение",
        "175": "Подножие",
        "176": "Созвездие",
        "177": "Корона",
        "178": "Надежда",
        "179": "Волшебство",
        "180": "Сенсация",
        "181": "Ночь",
        "182": "Завершение",
        "183": "Воспоминание",
        "184": "Ярмарка",
        "185": "Сокровище",
        "186": "Рассвет",
        "187": "Семейный",
        "188": "Победа",
        "189": "Жар",
        "190": "Печь",
        "191": "Взгляд",
        "192": "Раскраска",
        "193": "Нежность",
        "194": "Весна",
        "195": "Песня",
        "196": "Новый",
        "197": "Вечер",
        "198": "Снеговик",
        "199": "Коробка",
        "200": "Ледяной",
        "201": "Хлеб",
        "202": "Праздничный",
        "203": "Стук",
        "204": "Восторг",
        "205": "Солнце",
        "206": "Фейерверк",
        "207": "Серпантин",
        "208": "Команда",
        "209": "Призрак",
        "210": "Воздушный",
        "211": "Торжество",
        "212": "Жемчужина",
        "213": "Новогодний",
        "214": "Открытие",
        "215": "Хруст",
        "216": "Пирог",
        "217": "Вдохновение",
        "218": "Святой",
        "219": "Бумажка",
        "220": "Согласие",
        "221": "Радость",
        "222": "Драгоценность",
        "223": "Снежинка",
        "224": "Песенка",
        "225": "Золотой",
        "226": "Коробка",
        "227": "Уважение",
        "228": "Жар",
        "229": "Очарование",
        "230": "Звездопад",
        "231": "Завет",
        "232": "Сокровище",
        "233": "Вдохновение",
        "234": "Небо",
        "235": "Таинство",
        "236": "Воскрешение",
        "237": "Новинка",
        "238": "Отражение",
        "239": "Вираж",
        "240": "Завет",
        "241": "Бархат",
        "242": "Песенка",
        "243": "Сюрприз",
        "244": "Вдохновение",
        "245": "Сердце",
        "246": "Поцелуй",
        "247": "Бриллиант",
        "248": "Радость",
        "249": "Замок",
        "250": "Взлет",
        "251": "Свеча",
        "252": "Символ",
        "253": "Чудо",
        "254": "Победа",
        "255": "Хвала",
        "256": "Подарок",
        "257": "Стремление",
        "258": "Веселье",
        "259": "Ожидание",
        "260": "Бриллиант",
        "261": "Вдохновение",
        "262": "Победа",
        "263": "Новогодний",
        "264": "Лампион",
        "265": "Чудеса",
        "266": "Стрельба",
        "267": "Путешествие",
        "268": "Веселье",
        "269": "Торт",
        "270": "Почет",
        "271": "Вдохновение",
        "272": "Победа",
        "273": "Отражение",
        "274": "Жемчужина",
        "275": "Подношение",
        "276": "Завет",
        "277": "Стук",
        "278": "Призрак",
        "279": "Новый",
        "280": "Взгляд",
        "281": "Очарование",
        "282": "Сюрприз",
        "283": "Вдохновение",
        "284": "Новый",
        "285": "Бриллиант",
        "286": "Победа",
        "287": "Отражение",
        "288": "Жемчужина",
        "289": "Подношение",
        "290": "Завет",
        "291": "Стук",
        "292": "Призрак",
        "293": "Новый",
        "294": "Взгляд",
        "295": "Очарование",
        "296": "Сюрприз",
        "297": "Вдохновение",
        "298": "Новый",
        "299": "Бриллиант",
        "300": "Победа"
    },
    "Marvel": {
        "1": "Железный",
        "2": "Мститель",
        "3": "Человек-паук",
        "4": "Безумие",
        "5": "Росомаха",
        "6": "Великан",
        "7": "Тор",
        "8": "Загадочный",
        "9": "Ракета",
        "10": "Призрак",
        "11": "Черная",
        "12": "Скала",
        "13": "Вдохновение",
        "14": "Вижн",
        "15": "Небесный",
        "16": "Пламя",
        "17": "Халк",
        "18": "Звезда",
        "19": "Капитан",
        "20": "Стрелок",
        "21": "Сорвиголова",
        "22": "Барон",
        "23": "Локи",
        "24": "Могучий",
        "25": "Черепашка",
        "26": "Ведьма",
        "27": "Живая",
        "28": "Дракон",
        "29": "Ловушка",
        "30": "Феникс",
        "31": "Потрясающий",
        "32": "Прыжок",
        "33": "Доктор",
        "34": "Гром",
        "35": "Череп",
        "36": "Невидимка",
        "37": "Сокол",
        "38": "Мстительный",
        "39": "Стальной",
        "40": "Хищник",
        "41": "Магнето",
        "42": "Дракула",
        "43": "Пепельный",
        "44": "Быстрый",
        "45": "Каратель",
        "46": "Безумец",
        "47": "Америка",
        "48": "Мифический",
        "49": "Будущее",
        "50": "Безжалостный",
        "51": "Зверь",
        "52": "Галактика",
        "53": "Баронесса",
        "54": "Сияние",
        "55": "Ветеран",
        "56": "Война",
        "57": "Инфинити",
        "58": "Магия",
        "59": "Звездолет",
        "60": "Страж",
        "61": "Хищница",
        "62": "Рука",
        "63": "Чародей",
        "64": "Художник",
        "65": "Защитник",
        "66": "Невероятный",
        "67": "Богатырь",
        "68": "Песчаный",
        "69": "Мирный",
        "70": "Верный",
        "71": "Супер",
        "72": "Подземный",
        "73": "Робот",
        "74": "Злодей",
        "75": "Гений",
        "76": "Воин",
        "77": "Черепаха",
        "78": "Ночь",
        "79": "Солнце",
        "80": "Лучник",
        "81": "Гражданская",
        "82": "Маг",
        "83": "Гигант",
        "84": "Дьявол",
        "85": "Чудовище",
        "86": "Провидец",
        "87": "Жажда",
        "88": "Жертва",
        "89": "Летающий",
        "90": "Свет",
        "91": "Темный",
        "92": "Лазер",
        "93": "Мародер",
        "94": "Любовь",
        "95": "Бумеранг",
        "96": "Разрушитель",
        "97": "Волшебник",
        "98": "Клык",
        "99": "Чародейство",
        "100": "Камень",
        "101": "Голодный",
        "102": "Медальон",
        "103": "Тень",
        "104": "Стрела",
        "105": "Титан",
        "106": "Мозг",
        "107": "Конфликт",
        "108": "Реликвия",
        "109": "Падший",
        "110": "Боец",
        "111": "Погибель",
        "112": "Захват",
        "113": "Бросок",
        "114": "Доблесть",
        "115": "Лазурь",
        "116": "Сердце",
        "117": "Замок",
        "118": "Подвиг",
        "119": "Страх",
        "120": "Вера",
        "121": "Шанс",
        "122": "Хранитель",
        "123": "Прорыв",
        "124": "Исцеление",
        "125": "Легенда",
        "126": "Руна",
        "127": "Печать",
        "128": "Дыхание",
        "129": "Проклятие",
        "130": "Первородный",
        "131": "Территория",
        "132": "Мироздание",
        "133": "Раскол",
        "134": "Взрыв",
        "135": "Храм",
        "136": "Изгнание",
        "137": "Хватка",
        "138": "Символ",
        "139": "Разрушение",
        "140": "Воля",
        "141": "Победа",
        "142": "Пленник",
        "143": "Лавина",
        "144": "Цель",
        "145": "Орден",
        "146": "Нирвана",
        "147": "Молот",
        "148": "Судьба",
        "149": "Пробуждение",
        "150": "Уничтожение",
        "151": "Близнец",
        "152": "Оружие",
        "153": "Сила",
        "154": "Магнит",
        "155": "Сражение",
        "156": "Союз",
        "157": "Изгой",
        "158": "Гранат",
        "159": "Тенета",
        "160": "Глаз",
        "161": "Закон",
        "162": "Светлячок",
        "163": "Побег",
        "164": "Голос",
        "165": "Иллюзия",
        "166": "Ключ",
        "167": "Очищение",
        "168": "Плен",
        "169": "Западня",
        "170": "Преображение",
        "171": "Поражение",
        "172": "Катастрофа",
        "173": "Шторм",
        "174": "Опасность",
        "175": "Кара",
        "176": "Искусство",
        "177": "Побочный",
        "178": "Скрытность",
        "179": "Последний",
        "180": "Круг",
        "181": "Странник",
        "182": "Лук",
        "183": "Покинутый",
        "184": "Пророчество",
        "185": "Черепаший",
        "186": "Древность",
        "187": "Спасение",
        "188": "Космос",
        "189": "Принц",
        "190": "Вражда",
        "191": "Волна",
        "192": "Пепельница",
        "193": "Гарпун",
        "194": "Хищение",
        "195": "Бесконечность",
        "196": "Стражник",
        "197": "Соблазн",
        "198": "Сердцебиение",
        "199": "Варвар",
        "200": "Мстительность",
        "201": "Космонавт",
        "202": "Погоня",
        "203": "Штамп",
        "204": "Осколок",
        "205": "Персона",
        "206": "Долг",
        "207": "Статуэтка",
        "208": "Красавица",
        "209": "Ответ",
        "210": "Дерзость",
        "211": "Противник",
        "212": "Магистр",
        "213": "Звук",
        "214": "Меч",
        "215": "Супергерой",
        "216": "Погибельный",
        "217": "Одержимость",
        "218": "Таинственность",
        "219": "Галактический",
        "220": "Возмездие",
        "221": "Хранение",
        "222": "Тварь",
        "223": "Время",
        "224": "Побочка",
        "225": "Наследие",
        "226": "Поджог",
        "227": "Комета",
        "228": "Независимость",
        "229": "Пришелец",
        "230": "Разрыв",
        "231": "Маска",
        "232": "Барьер",
        "233": "Стрельба",
        "234": "Жажда",
        "235": "Переплетение",
        "236": "Запад",
        "237": "Квазар",
        "238": "Миссия",
        "239": "Перо",
        "240": "Смерч",
        "241": "Взгляд",
        "242": "Мародерство",
        "243": "Замена",
        "244": "Затмение",
        "245": "Опека",
        "246": "Волшебство",
        "247": "Шрам",
        "248": "Подвал",
        "249": "Теория",
        "250": "Союзник",
        "251": "Ловкач",
        "252": "Подмога",
        "253": "Смерть",
        "254": "Прорыв",
        "255": "Барьер",
        "256": "Черпак",
        "257": "Плащ",
        "258": "Оживление",
        "259": "Ветка",
        "260": "Партизан",
        "261": "Хищничество",
        "262": "Пленительный",
        "263": "Рулетка",
        "264": "Мудрость",
        "265": "Свирепость",
        "266": "Вторжение",
        "267": "Гонка",
        "268": "Стрельба",
        "269": "Разрушение",
        "270": "Подземелье",
        "271": "Западня",
        "272": "Лучник",
        "273": "Звезда",
        "274": "Метка",
        "275": "Кольцо",
        "276": "Подорожник",
        "277": "Звон",
        "278": "Клык",
        "279": "Жало",
        "280": "Копье",
        "281": "Молния",
        "282": "Тень",
        "283": "Отражение",
        "284": "Мрак",
        "285": "Прогулка",
        "286": "Холод",
        "287": "Очищение",
        "288": "Мудрость",
        "289": "Заклинание",
        "290": "Живность",
        "291": "Столкновение",
        "292": "Разгадка",
        "293": "Замок",
        "294": "Пиратство",
        "295": "Паутина",
        "296": "Битва",
        "297": "Демон",
        "298": "Замешательство",
        "299": "Ложь",
        "300": "Мечта"
    },
    "Природа": {
        "1": "Лес",
        "2": "Река",
        "3": "Гора",
        "4": "Озеро",
        "5": "Поляна",
        "6": "Цветы",
        "7": "Звезды",
        "8": "Солнце",
        "9": "Дождь",
        "10": "Ветер",
        "11": "Трава",
        "12": "Песок",
        "13": "Море",
        "14": "Птицы",
        "15": "Луна",
        "16": "Снег",
        "17": "Роза",
        "18": "Камень",
        "19": "Закат",
        "20": "Рассвет",
        "21": "Туман",
        "22": "Радуга",
        "23": "Дерево",
        "24": "Пчела",
        "25": "Песня",
        "26": "Дельфин",
        "27": "Бабочка",
        "28": "Водопад",
        "29": "Орел",
        "30": "Куст",
        "31": "Пещера",
        "32": "Рыба",
        "33": "Жук",
        "34": "Медведь",
        "35": "Снежинка",
        "36": "Вода",
        "37": "Крик",
        "38": "Дельфин",
        "39": "Лиса",
        "40": "Сова",
        "41": "Лягушка",
        "42": "Ляпота",
        "43": "Мак",
        "44": "Кошка",
        "45": "Мечта",
        "46": "Жизнь",
        "47": "Зверь",
        "48": "Печь",
        "49": "Секрет",
        "50": "Чудо",
        "51": "Заря",
        "52": "Утро",
        "53": "Вечер",
        "54": "Ночь",
        "55": "День",
        "56": "Тень",
        "57": "Свет",
        "58": "Тьма",
        "59": "Луза",
        "60": "Мороз",
        "61": "Тепло",
        "62": "Оптимизм",
        "63": "Мгла",
        "64": "Поток",
        "65": "Чайка",
        "66": "Луч",
        "67": "Молния",
        "68": "Загадка",
        "69": "Простор",
        "70": "Корм",
        "71": "Лосось",
        "72": "Дикий",
        "73": "Мед",
        "74": "Гриб",
        "75": "Кедр",
        "76": "Пальма",
        "77": "Каштан",
        "78": "Кипарис",
        "79": "Сосна",
        "80": "Ель",
        "81": "Дуб",
        "82": "Береза",
        "83": "Бук",
        "84": "Ясень",
        "85": "Липа",
        "86": "Вяз",
        "87": "Ива",
        "88": "Тополь",
        "89": "Осина",
        "90": "Лавр",
        "91": "Папоротник",
        "92": "Мох",
        "93": "Кустарник",
        "94": "Цветение",
        "95": "Жара",
        "96": "Опады",
        "97": "Роса",
        "98": "Влага",
        "99": "Пар",
        "100": "Холод",
        "101": "Склон",
        "102": "Жгут",
        "103": "Вершина",
        "104": "Ущелье",
        "105": "Хребет",
        "106": "Скала",
        "107": "Преисподняя",
        "108": "Бездна",
        "109": "Роща",
        "110": "Родник",
        "111": "Колыбель",
        "112": "Утес",
        "113": "Приют",
        "114": "Скрытость",
        "115": "Логово",
        "116": "Тропа",
        "117": "Впадина",
        "118": "Полярность",
        "119": "Сфера",
        "120": "Сфинкс",
        "121": "Грот",
        "122": "Каньон",
        "123": "Лагуна",
        "124": "Коралл",
        "125": "Атолл",
        "126": "Пальметто",
        "127": "Хроника",
        "128": "Волна",
        "129": "Тропики",
        "130": "Субтропики",
        "131": "Экватор",
        "132": "Мохито",
        "133": "Хамелеон",
        "134": "Сирень",
        "135": "Геология",
        "136": "Аваланш",
        "137": "Ледник",
        "138": "Каскад",
        "139": "Глетчер",
        "140": "Ледовитость",
        "141": "Шторм",
        "142": "Прибой",
        "143": "Буй",
        "144": "Парус",
        "145": "Гребень",
        "146": "Волчок",
        "147": "Зыбь",
        "148": "Буран",
        "149": "Гроза",
        "150": "Молниеносность",
        "151": "Кремль",
        "152": "Галерея",
        "153": "Хоромы",
        "154": "Буйвол",
        "155": "Брод",
        "156": "Трясина",
        "157": "Пастбище",
        "158": "Кочевье",
        "159": "Степь",
        "160": "Пустыня",
        "161": "Влажность",
        "162": "Перепад",
        "163": "Дикость",
        "164": "Сокровище",
        "165": "Забытость",
        "166": "Романтика",
        "167": "Праздник",
        "168": "Плен",
        "169": "Орешник",
        "170": "Грибница",
        "171": "Ржавчина",
        "172": "Тишина",
        "173": "Лиственница",
        "174": "Сандал",
        "175": "Печька",
        "176": "Веточка",
        "177": "Ветрище",
        "178": "Родник",
        "179": "Шиповник",
        "180": "Пруд",
        "181": "Рыбалка",
        "182": "Королевство",
        "183": "Бескрайность",
        "184": "Видение",
        "185": "Пышность",
        "186": "Пыльность",
        "187": "Лепесток",
        "188": "Птицесборник",
        "189": "Холм",
        "190": "Звук",
        "191": "Качели",
        "192": "Первозданность",
        "193": "Оздоровление",
        "194": "Целебность",
        "195": "Плодородие",
        "196": "Целостность",
        "197": "Разнообразие",
        "198": "Биоразнообразие",
        "199": "Зеленость",
        "200": "Просторность",
        "201": "Открытость",
        "202": "Благосостояние",
        "203": "Долголетие",
        "204": "Вдохновение",
        "205": "Живучесть",
        "206": "Прочность",
        "207": "Упругость",
        "208": "Гармония",
        "209": "Экосистема",
        "210": "Сохранение",
        "211": "Биосфера",
        "212": "Равновесие",
        "213": "Сбалансированность",
        "214": "Развитие",
        "215": "Созерцание",
        "216": "Восхищение",
        "217": "Почва",
        "218": "Корни",
        "219": "Росток",
        "220": "Побег",
        "221": "Цветение",
        "222": "Плод",
        "223": "Семя",
        "224": "Урожай",
        "225": "Планета",
        "226": "Атмосфера",
        "227": "Озон",
        "228": "Тектоника",
        "229": "Скарпа",
        "230": "Фауна",
        "231": "Флора",
        "232": "Биом",
        "233": "Эндемики",
        "234": "Миграция",
        "235": "Бродяги",
        "236": "Территория",
        "237": "Заповедник",
        "238": "Национальный",
        "239": "парк",
        "240": "Биотоп",
        "241": "Водораздел",
        "242": "Ландшафт",
        "243": "Экология",
        "244": "Загрязнение",
        "245": "Очистка",
        "246": "Восстановление",
        "247": "Реабилитация",
        "248": "Биотехнологии",
        "249": "Регенерация",
        "250": "Биодиверсификация",
        "251": "Переработка",
        "252": "Энергия",
        "253": "Ветроэнергетика",
        "254": "Гидроэнергетика",
        "255": "Солнечная",
        "256": "энергия",
        "257": "Биомасса",
        "258": "Экологический",
        "259": "отпечаток",
        "260": "Карбоновый",
        "261": "след",
        "262": "Экологический",
        "263": "след",
        "264": "Природный",
        "265": "капитал",
        "266": "Экосистемные",
        "267": "услуги",
        "268": "Зеленые",
        "269": "технологии",
        "270": "Сельское",
        "271": "хозяйство",
        "272": "Лесное",
        "273": "хозяйство",
        "274": "Охота",
        "275": "Рыболовство",
        "276": "Экотуризм",
        "277": "Природный",
        "278": "запас",
        "279": "Природный",
        "280": "ресурс",
        "281": "Эксплуатация",
        "282": "Устойчивое",
        "283": "развитие",
        "284": "Экологическое",
        "285": "равновесие",
        "286": "Аквапоника",
        "287": "Биоразлагаемый",
        "288": "Биотехнология",
        "289": "Деградация",
        "290": "Эрозия",
        "291": "Дренаж",
        "292": "Исчезновение",
        "293": "Вид",
        "294": "Социальная",
        "295": "ответственность",
        "296": "Экологическая",
        "297": "устойчивость",
        "298": "Экологический",
        "299": "кризис",
        "300": "Восстанавливаемость"
    },
    "Еда": {
        "1": "Фрукт",
        "2": "Овощ",     
        "3": "Мясо",     
        "4": "Рыба",     
        "5": "Хлеб",     
        "6": "Сыр",      
        "7": "Яйцо",     
        "8": "Молоко",   
        "9": "Масло",    
        "10": "Рис",     
        "11": "Гречка",  
        "12": "Макароны",
        "13": "Суп",     
        "14": "Салат",   
        "15": "Пирог",   
        "16": "Каша",    
        "17": "Торт",    
        "18": "Шоколад", 
        "19": "Чай",     
        "20": "Кофе",    
        "21": "Сок",     
        "22": "Вино",
        "23": "Пиво",
        "24": "Кола",
        "25": "Вода",
        "26": "Лимонад",
        "27": "Мороженое",
        "28": "Пицца",
        "29": "Бургер",
        "30": "Суши",
        "31": "Ролл",
        "32": "Хот-дог",
        "33": "Стейк",
        "34": "Котлета",
        "35": "Бутерброд",
        "36": "Сэндвич",
        "37": "Блин",
        "38": "Пельмени",
        "39": "Вареник",
        "40": "Кебаб",
        "41": "Креветка",
        "42": "Кальмар",
        "43": "Лобстер",
        "44": "Краб",
        "45": "Омлет",
        "46": "Паста",
        "47": "Пирожок",
        "48": "Борщ",
        "49": "Гуляш",
        "50": "Плов",
        "51": "Чипсы",
        "52": "Попкорн",
        "53": "Шаурма",
        "54": "Фрикаделька",
        "55": "Супчик",
        "56": "Свекла",
        "57": "Морковь",
        "58": "Картошка",
        "59": "Баклажан",
        "60": "Помидор",
        "61": "Огурец",
        "62": "Лук",
        "63": "Чеснок",
        "64": "Петрушка",
        "65": "Укроп",
        "66": "Сельдерей",
        "67": "Перец",
        "68": "Бобы",
        "69": "Горох",
        "70": "Фасоль",
        "71": "Гриб",
        "72": "Капуста",
        "73": "Шпинат",
        "74": "Брокколи",
        "75": "Кукуруза",
        "76": "Горох",
        "77": "Оливки",
        "78": "Арбуз",
        "79": "Апельсин",
        "80": "Банан",
        "81": "Гранат",
        "82": "Виноград",
        "83": "Яблоко",
        "84": "Ананас",
        "85": "Киви",
        "86": "Мандарин",
        "87": "Грейпфрут",
        "88": "Персик",
        "89": "Абрикос",
        "90": "Лимон",
        "91": "Клубника",
        "92": "Вишня",
        "93": "Черника",
        "94": "Малина",
        "95": "Ягода",
        "96": "Авокадо",
        "97": "Гранат",
        "98": "Папайя",
        "99": "Манго",
        "100": "Фейхоа",
        "101": "Карамбола",
        "102": "Дыня",
        "103": "Дынная",
        "104": "Лаваш",
        "105": "Нан",
        "106": "Тортилья",
        "107": "Багет",
        "108": "Круассан",
        "109": "Батон",
        "110": "Фокачча",
        "111": "Хлебец",
        "112": "Чиабатта",
        "113": "Бриошь",
        "114": "Рулет",
        "115": "Чили",
        "116": "Карри",
        "117": "Паэлья",
        "118": "Курица",
        "119": "Утка",
        "120": "Индейка",
        "121": "Гусь",
        "122": "Перепел",
        "123": "Ягненок",
        "124": "Баранина",
        "125": "Свинина",
        "126": "Говядина",
        "127": "Бекон",
        "128": "Ветчина",
        "129": "Колбаса",
        "130": "Сосиска",
        "131": "Лосось",
        "132": "Форель",
        "133": "Тунец",
        "134": "Скумбрия",
        "135": "Окунь",
        "136": "Карась",
        "137": "Сазан",
        "138": "Белуга",
        "139": "Осетр",
        "140": "Сом",
        "141": "Карп",
        "142": "Щука",
        "143": "Судак",
        "144": "Горбуша",
        "145": "Сельдь",
        "146": "Треска",
        "147": "Морской",
        "148": "еж",
        "149": "Краб",
        "150": "Омар",
        "151": "Креветка",
        "152": "Камбала",
        "153": "Треска",
        "154": "Лангуст",
        "155": "Мидия",
        "156": "Устрица",
        "157": "Пастрами",
        "158": "Хамон",
        "159": "Прошутто",
        "160": "Салями",
        "161": "Колбаски",
        "162": "Паштет",
        "163": "Ливер",
        "164": "Печень",
        "165": "Паштет",
        "166": "Копчености",
        "167": "Жареность",
        "168": "Запеченность",
        "169": "Вареность",
        "170": "Соленость",
        "171": "Сладость",
        "172": "Кислость",
        "173": "Острота",
        "174": "Пряность",
        "175": "Пикантность",
        "176": "Сытность",
        "177": "Питательность",
        "178": "Калорийность",
        "179": "Вкусность",
        "180": "Аппетитность",
        "181": "Сытость",
        "182": "Голодность",
        "183": "Насыщенность",
        "184": "Питательность",
        "185": "Энергетичность",
        "186": "Полезность",
        "187": "Вредность",
        "188": "Натуральность",
        "189": "Органичность",
        "190": "Веганство",
        "191": "Вегетарианство",
        "192": "Фитнес",
        "193": "Здоровье",
        "194": "Баланс",
        "195": "Диета",
        "196": "Питание",
        "197": "Кулинария",
        "198": "Кулинар",
        "199": "Повар",
        "200": "Коктейль",
        "201": "Смузи",
        "202": "Бренд",
        "203": "Ресторан",
        "204": "Кафе",
        "205": "Фаст-фуд",
        "206": "Фудтрак",
        "207": "Фудкорт",
        "208": "Столовая",
        "209": "Банкет",
        "210": "Фуршет",
        "211": "Завтрак",
        "212": "Обед",
        "213": "Ужин",
        "214": "Перекус",
        "215": "Чайхана",
        "216": "Кафетерий",
        "217": "Бар",
        "218": "Буфет",
        "219": "Пекарня",
        "220": "Кондитерская",
        "221": "Пиццерия",
        "222": "Суши-бар",
        "223": "Шашлычная",
        "224": "Гриль-бар",
        "225": "Хинкальная",
        "226": "Шавермная",
        "227": "Фондю",
        "228": "Тапас",
        "229": "Стейк-хаус",
        "230": "Рыбный",
        "231": "ресторан",
        "232": "Мороженщик",
        "233": "Конфетчик",
        "234": "Печеньки",
        "235": "Мармелад",
        "236": "Зефир",
        "237": "Ирис",
        "238": "Карамель",
        "239": "Шоколадка",
        "240": "Леденец",
        "241": "Халва",
        "242": "Тортик",
        "243": "Пирожное",
        "244": "Пряник",
        "245": "Печенье",
        "246": "Кекс",
        "247": "Бисквит",
        "248": "Маффин",
        "249": "Круассан",
        "250": "Пончик",
        "251": "Сладкая",
        "252": "вата",
        "253": "Вафля",
        "254": "Брауни",
        "255": "Чизкейк",
        "256": "Тирамису",
        "257": "Мусс",
        "258": "Пудинг",
        "259": "Крем-брюле",
        "260": "Фондан",
        "261": "Сорбет",
        "262": "Макарон",
        "263": "Пряничный",
        "264": "Печенюшка",
        "265": "Булочка",
        "266": "Круассан",
        "267": "Бейгл",
        "268": "Слоеное",
        "269": "Хлебец",
        "270": "Пончик",
        "271": "Рогалик",
        "272": "Тарталетка",
        "273": "Маффин",
        "274": "Тост",
        "275": "Булка",
        "276": "Рулет",
        "277": "Сэндвич",
        "278": "Багет",
        "279": "Хачапури",
        "280": "Бутерброд",
        "281": "Сэндвич",
        "282": "Пирожок",
        "283": "Ролл",
        "284": "Сушеный",
        "285": "Чипсы",
        "286": "Соломка",
        "287": "Картофель",
        "288": "Орех",
        "289": "Миндаль",
        "290": "Фисташка",
        "291": "Арахис",
        "292": "Кешью",
        "293": "Грецкий",
        "294": "Кокос",
        "295": "Фундук",
        "296": "Лесной",
        "297": "Пекан",
        "298": "Лукум",
        "299": "Чурчхела",
        "300": "Снэк"
    },
    "Фильмы": {
        "1": "Блокбастер",
        "2": "Драма",
        "3": "Комедия",
        "4": "Триллер",
        "5": "Ужасы",
        "6": "Фантастика",
        "7": "Экшн",
        "8": "Романтика",
        "9": "Мелодрама",
        "10": "Анимация",
        "11": "Мультфильм",
        "12": "Документальный",
        "13": "Исторический",
        "14": "Фэнтези",
        "15": "Криминал",
        "16": "Детектив",
        "17": "Вестерн",
        "18": "Боевик",
        "19": "Авантюра",
        "20": "Хоррор",
        "21": "Мистика",
        "22": "Катастрофа",
        "23": "Фильм-нуар",
        "24": "Мюзикл",
        "25": "Трагедия",
        "26": "Сказка",
        "27": "Эпос",
        "28": "Спорт",
        "29": "Биография",
        "30": "Драмеди",
        "31": "Аниме",
        "32": "Комикс",
        "33": "Римейк",
        "34": "Приключения",
        "35": "Драматургия",
        "36": "Кинодрама",
        "37": "Короткометражка",
        "38": "Детский",
        "39": "Шедевр",
        "40": "Культовый",
        "41": "Артхаус",
        "42": "Политика",
        "43": "Реалити",
        "44": "Психология",
        "45": "Ирония",
        "46": "Травма",
        "47": "Эксперимент",
        "48": "Флешбек",
        "49": "Экранизация",
        "50": "Премьера",
        "51": "Фестиваль",
        "52": "Киностудия",
        "53": "Режиссура",
        "54": "Сценарий",
        "55": "Камера",
        "56": "Монтаж",
        "57": "Звук",
        "58": "Диалог",
        "59": "Задник",
        "60": "Эффект",
        "61": "Костюм",
        "62": "Спецэффект",
        "63": "Персонаж",
        "64": "Герой",
        "65": "Антагонист",
        "66": "Протагонист",
        "67": "Актер",
        "68": "Актриса",
        "69": "Роль",
        "70": "Съемка",
        "71": "Постановка",
        "72": "Декорация",
        "73": "Постпродакшн",
        "74": "Цветокоррекция",
        "75": "Манера",
        "76": "Стилистика",
        "77": "Заставка",
        "78": "Сцена",
        "79": "План",
        "80": "Сюжет",
        "81": "Вольная",
        "82": "Пересказ",
        "83": "Оскар",
        "84": "Золотой",
        "85": "Пальмовый",
        "86": "Берлинский",
        "87": "Венецианский",
        "88": "Каннский",
        "89": "Французский",
        "90": "Итальянский",
        "91": "Японский",
        "92": "Российский",
        "93": "Американский",
        "94": "Британский",
        "95": "Индийский",
        "96": "Корейский",
        "97": "Китайский",
        "98": "Немецкий",
        "99": "Шведский",
        "100": "Датский",
        "101": "Голливуд",
        "102": "Болливуд",
        "103": "Колливуд",
        "104": "Долливуд",
        "105": "Малливуд",
        "106": "Холливудский",
        "107": "Индустрия",
        "108": "Актерство",
        "109": "Игра",
        "110": "Эмоция",
        "111": "Сценичность",
        "112": "Живопись",
        "113": "История",
        "114": "Величие",
        "115": "Виртуоз",
        "116": "Жанр",
        "117": "Классика",
        "118": "Символ",
        "119": "Легенда",
        "120": "Художник",
        "121": "Мастер",
        "122": "Кинематография",
        "123": "Прокат",
        "124": "Лента",
        "125": "Касса",
        "126": "Зритель",
        "127": "Критик",
        "128": "Синематография",
        "129": "Призер",
        "130": "Премия",
        "131": "Коронавирус",
        "132": "Бокс-офис",
        "133": "Шедевральность",
        "134": "Монументальность",
        "135": "Артхаусность",
        "136": "Документальность",
        "137": "Массовка",
        "138": "Трибуна",
        "139": "Лауреат",
        "140": "Жюри",
        "141": "Судья",
        "142": "Эксперт",
        "143": "Конкурс",
        "144": "Блестящесть",
        "145": "Постмодернизм",
        "146": "Антураж",
        "147": "Аудитория",
        "148": "Кинолюбитель",
        "149": "Креативность",
        "150": "Оригинальность",
        "151": "Инновация",
        "152": "Культура",
        "153": "Импровизация",
        "154": "Хроника",
        "155": "Фильмфест",
        "156": "Синематека",
        "157": "Индивидуальность",
        "158": "Историография",
        "159": "Компиляция",
        "160": "Монтажер",
        "161": "Копия",
        "162": "Парадокс",
        "163": "Манифест",
        "164": "Документация",
        "165": "Конференция",
        "166": "Лаборатория",
        "167": "Авангард",
        "168": "Ретроспектива",
        "169": "Сюрреализм",
        "170": "Формат",
        "171": "Дистрибуция",
        "172": "Премьерка",
        "173": "Заглавие",
        "174": "Салон",
        "175": "Сеть",
        "176": "Интернет",
        "177": "Бренд",
        "178": "Партнерство",
        "179": "Эксклюзивность",
        "180": "Спонсорство",
        "181": "Реклама",
        "182": "Публикация",
        "183": "Хайп",
        "184": "Сенсация",
        "185": "Продакшн",
        "186": "Штамп",
        "187": "Живучесть",
        "188": "Шедевричность",
        "189": "Полемика",
        "190": "Литература",
        "191": "Концепция",
        "192": "Лицензия",
        "193": "Репутация",
        "194": "Видение",
        "195": "Концептуализм",
        "196": "Философия",
        "197": "Артхаусник",
        "198": "Художественность",
        "199": "Идея",
        "200": "Аллегория",
        "201": "Постмодерн",
        "202": "Контекст",
        "203": "Канон",
        "204": "Эклектика",
        "205": "Эстетика",
        "206": "Критерий",
        "207": "Экспрессия",
        "208": "Ценность",
        "209": "Смысл",
        "210": "Символизм",
        "211": "Клише",
        "212": "Персонажность",
        "213": "Имидж",
        "214": "Проекция",
        "215": "Техника",
        "216": "Этюд",
        "217": "Конструктивизм",
        "218": "Авторитет",
        "219": "Спецэффектность",
        "220": "Формализм",
        "221": "Импрессионизм",
        "222": "Экспрессионизм",
        "223": "Историзм",
        "224": "Амплуа",
        "225": "Раскадровка",
        "226": "Экран",
        "227": "Постановщик",
        "228": "Телевидение",
        "229": "Синематек",
        "230": "Премьера",
        "231": "Фестиваль",
        "232": "Первоисточник",
        "233": "Эпизод",
        "234": "Интрига",
        "235": "Этюд",
        "236": "Импровизация",
        "237": "Эксперимент",
        "238": "Экзамен",
        "239": "Телеканал",
        "240": "Дефилирование",
        "241": "Визуальность",
        "242": "Камералка",
        "243": "Антигерой",
        "244": "Герой",
        "245": "Война",
        "246": "Сражение",
        "247": "Персонаж",
        "248": "Трилогия",
        "249": "Телесериал",
        "250": "Сезон",
        "251": "Эпизод",
        "252": "Кадр",
        "253": "Синематограф",
        "254": "Палитра",
        "255": "Тон",
        "256": "Темп",
        "257": "Ритм",
        "258": "Контраст",
        "259": "Образ",
        "260": "Фон",
        "261": "Действие",
        "262": "Мотив",
        "263": "Интонация",
        "264": "Экспрессия",
        "265": "Динамика",
        "266": "Энергия",
        "267": "Эмоция",
        "268": "Драматургия",
        "269": "Кульминация",
        "270": "Раскрытие",
        "271": "Изюм",
        "272": "Красивость",
        "273": "Восхищение",
        "274": "Пробуждение",
        "275": "Эволюция",
        "276": "Откровение",
        "277": "Завершение",
        "278": "Поднятие",
        "279": "Погружение",
        "280": "Энтропия",
        "281": "Лирика",
        "282": "Героика",
        "283": "Апофеоз",
        "284": "Восхождение",
        "285": "Падение",
        "286": "Отражение",
        "287": "Откровение",
        "288": "Излучение",
        "289": "Притяжение",
        "290": "Отвержение",
        "291": "Влияние",
        "292": "Сопротивление",
        "293": "Разрушение",
        "294": "Возрождение",
        "295": "Восстановление",
        "296": "Испытание",
        "297": "Верность",
        "298": "Предательство",
        "299": "Победа",
        "300": "Поражение"
    }
}

def generate_session_id():
    return str(uuid.uuid4())

def prov_nast():
    user_data_for_session = user_data.get(session['session_id'], {})
    slov_kom = user_data_for_session['Команды']
    slov_dl = user_data_for_session['Длительность раунда']
    slov_kl = user_data_for_session['Количество очков для победы']
    slov_sv = user_data_for_session['Категория']['Свой набор']['Слова']
    status_sv = user_data_for_session['Категория']['Свой набор']['Статус']
    slov_kat = user_data_for_session['Категория']
    a = 0
    shet_kom = 0
    shet_dl_rau = 0
    shet_kl_och = 0
    shet_sv = 0
    shet_kat = 0
    for key, value in slov_kom.items():
        if slov_kom[key]['Статус'] == True:
            shet_kom+=1
    if shet_kom>1:
        a+=1
        shet_kom=0
    else:
        shet_kom=0
        return 'кол-во команд'

    for key, value in slov_dl.items():
        if slov_dl[key] == True:
            shet_dl_rau+=1
    if shet_dl_rau == 1:
        a+=1
        shet_dl_rau=0
    else:
        shet_dl_rau=0
        return 'дл раунда'

    for key, value in slov_kl.items():
        if slov_kl[key] == True:
            shet_kl_och+=1

    if shet_kl_och == 1:
        a+=1
        shet_kl_och=0
    else:
        shet_kl_och=0
        return 'кол-во оч'

    if status_sv==True:
        for i in range(1, 301):
            if slov_sv[str(i)]:
                shet_sv+=1
                break
        if shet_sv == 0:
            return 'свой набор'
        else:
            a+=1
            shet_sv=0
    else:
        a+=1

    for key, value in slov_kat.items():
        if status_sv:
            shet_kat+=1
            break
        if key != 'Свой набор':
            if slov_kat[key]:
                shet_kat+=1
                break
    if shet_kat>0:
        a+=1
    else:
        return 'категории'

    if a == 5:
        return True
    return False

def db_word():
    user_data_for_session = user_data.get(session['session_id'], {})
    words_ret = []
    if user_data_for_session['Категория']['Свой набор']['Статус']:
        for i in range(1, 301):
            if user_data_for_session['Категория']['Свой набор']['Слова'][str(i)]:
                words_ret.append(user_data_for_session['Категория']['Свой набор']['Слова'][str(i)])
    for key, value in user_data_for_session['Категория'].items():
        if key == 'Свой набор':
            break
        elif user_data_for_session['Категория'][key]:
            for key_1, value_1 in words_igr[key].items():
                words_ret.append(value_1)
    return words_ret

def team_vivod():
    user_data_for_session = user_data.get(session['session_id'], {})
    slov = user_data_for_session["Команды"]
    result = []
    for key, value in slov.items():
        if slov[key]['Статус']:
            result.append(slov[key]['Название'])
    return result

@app.route('/', methods=['GET'])
def main_str():
    session.clear()
    session_id = session.get('session_id', None)
    print(session)
    print(session_id)
    if session_id is None:
        session['session_id'] = generate_session_id()
        user_data[session['session_id']] = {
                "Категория": {
                "Базовый набор": False,
                "IT": False,
                "Юриспруденция": False,
                "Новый год": False,
                "Marvel": False,
                "Природа": False,
                "Еда": False,
                "Фильмы": False,
                "Свой набор": {
                    "Статус": False,
                    "Слова": {
                        "1": '',
                        "2": '',
                        "3": '',
                        "4": '',
                        "5": '',
                        "6": '',
                        "7": '',
                        "8": '',
                        "9": '',
                        "10": '',
                        "11": '',
                        "12": '',
                        "13": '',
                        "14": '',
                        "15": '',
                        "16": '',
                        "17": '',
                        "18": '',
                        "19": '',
                        "20": '',
                        "21": '',
                        "22": '',
                        "23": '',
                        "24": '',
                        "25": '',
                        "26": '',
                        "27": '',
                        "28": '',
                        "29": '',
                        "30": '',
                        "31": '',
                        "32": '',
                        "33": '',
                        "34": '',
                        "35": '',
                        "36": '',
                        "37": '',
                        "38": '',
                        "39": '',
                        "40": '',
                        "41": '',
                        "42": '',
                        "43": '',
                        "44": '',
                        "45": '',
                        "46": '',
                        "47": '',
                        "48": '',
                        "49": '',
                        "50": '',
                        "51": '',
                        "52": '',
                        "53": '',
                        "54": '',
                        "55": '',
                        "56": '',
                        "57": '',
                        "58": '',
                        "59": '',
                        "60": '',
                        "61": '',
                        "62": '',
                        "63": '',
                        "64": '',
                        "65": '',
                        "66": '',
                        "67": '',
                        "68": '',
                        "69": '',
                        "70": '',
                        "71": '',
                        "72": '',
                        "73": '',
                        "74": '',
                        "75": '',
                        "76": '',
                        "77": '',
                        "78": '',
                        "79": '',
                        "80": '',
                        "81": '',
                        "82": '',
                        "83": '',
                        "84": '',
                        "85": '',
                        "86": '',
                        "87": '',
                        "88": '',
                        "89": '',
                        "90": '',
                        "91": '',
                        "92": '',
                        "93": '',
                        "94": '',
                        "95": '',
                        "96": '',
                        "97": '',
                        "98": '',
                        "99": '',
                        "100": '',
                        "101": '',
                        "102": '',
                        "103": '',
                        "104": '',
                        "105": '',
                        "106": '',
                        "107": '',
                        "108": '',
                        "109": '',
                        "110": '',
                        "111": '',
                        "112": '',
                        "113": '',
                        "114": '',
                        "115": '',
                        "116": '',
                        "117": '',
                        "118": '',
                        "119": '',
                        "120": '',
                        "121": '',
                        "122": '',
                        "123": '',
                        "124": '',
                        "125": '',
                        "126": '',
                        "127": '',
                        "128": '',
                        "129": '',
                        "130": '',
                        "131": '',
                        "132": '',
                        "133": '',
                        "134": '',
                        "135": '',
                        "136": '',
                        "137": '',
                        "138": '',
                        "139": '',
                        "140": '',
                        "141": '',
                        "142": '',
                        "143": '',
                        "144": '',
                        "145": '',
                        "146": '',
                        "147": '',
                        "148": '',
                        "149": '',
                        "150": '',
                        "151": '',
                        "152": '',
                        "153": '',
                        "154": '',
                        "155": '',
                        "156": '',
                        "157": '',
                        "158": '',
                        "159": '',
                        "160": '',
                        "161": '',
                        "162": '',
                        "163": '',
                        "164": '',
                        "165": '',
                        "166": '',
                        "167": '',
                        "168": '',
                        "169": '',
                        "170": '',
                        "171": '',
                        "172": '',
                        "173": '',
                        "174": '',
                        "175": '',
                        "176": '',
                        "177": '',
                        "178": '',
                        "179": '',
                        "180": '',
                        "181": '',
                        "182": '',
                        "183": '',
                        "184": '',
                        "185": '',
                        "186": '',
                        "187": '',
                        "188": '',
                        "189": '',
                        "190": '',
                        "191": '',
                        "192": '',
                        "193": '',
                        "194": '',
                        "195": '',
                        "196": '',
                        "197": '',
                        "198": '',
                        "199": '',
                        "200": '',
                        "201": '',
                        "202": '',
                        "203": '',
                        "204": '',
                        "205": '',
                        "206": '',
                        "207": '',
                        "208": '',
                        "209": '',
                        "210": '',
                        "211": '',
                        "212": '',
                        "213": '',
                        "214": '',
                        "215": '',
                        "216": '',
                        "217": '',
                        "218": '',
                        "219": '',
                        "220": '',
                        "221": '',
                        "222": '',
                        "223": '',
                        "224": '',
                        "225": '',
                        "226": '',
                        "227": '',
                        "228": '',
                        "229": '',
                        "230": '',
                        "231": '',
                        "232": '',
                        "233": '',
                        "234": '',
                        "235": '',
                        "236": '',
                        "237": '',
                        "238": '',
                        "239": '',
                        "240": '',
                        "241": '',
                        "242": '',
                        "243": '',
                        "244": '',
                        "245": '',
                        "246": '',
                        "247": '',
                        "248": '',
                        "249": '',
                        "250": '',
                        "251": '',
                        "252": '',
                        "253": '',
                        "254": '',
                        "255": '',
                        "256": '',
                        "257": '',
                        "258": '',
                        "259": '',
                        "260": '',
                        "261": '',
                        "262": '',
                        "263": '',
                        "264": '',
                        "265": '',
                        "266": '',
                        "267": '',
                        "268": '',
                        "269": '',
                        "270": '',
                        "271": '',
                        "272": '',
                        "273": '',
                        "274": '',
                        "275": '',
                        "276": '',
                        "277": '',
                        "278": '',
                        "279": '',
                        "280": '',
                        "281": '',
                        "282": '',
                        "283": '',
                        "284": '',
                        "285": '',
                        "286": '',
                        "287": '',
                        "288": '',
                        "289": '',
                        "290": '',
                        "291": '',
                        "292": '',
                        "293": '',
                        "294": '',
                        "295": '',
                        "296": '',
                        "297": '',
                        "298": '',
                        "299": '',
                        "300": ''
                    }
                }
            },
            "Длительность раунда": {
                "30": False,
                "40": False,
                "50": False,
                "60": False,
                "120": False
            },
            "Количество очков для победы": {
                "20": False,
                "30": False,
                "50": False,
                "60": False,
                "80": False
            },
            "Команды": {
                "1": {
                    "Статус": False,
                    "Название": '',
                    "Баллы": 0,
                    "Картинка": ''
                },
                "2": {
                    "Статус": False,
                    "Название": '',
                    "Баллы": 0,
                    "Картинка": ''
                },
                "3": {
                    "Статус": False,
                    "Название": '',
                    "Баллы": 0,
                    "Картинка": ''
                },
                "4": {
                    "Статус": False,
                    "Название": '',
                    "Баллы": 0,
                    "Картинка": ''
                },
                "5": {
                    "Статус": False,
                    "Название": '',
                    "Баллы": 0,
                    "Картинка": ''
                }
            }
        }
    user_data_for_session = user_data.get(session['session_id'], {})
    print(session)
    print(session_id)
    print(user_data_for_session)
    return render_template('main_str.html')

@app.route('/next', methods=['GET', 'POST'])
def index2():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    user_data_for_session = user_data.get(session['session_id'], {})
    team_1 = user_data_for_session["Команды"]["1"]["Название"]
    team_2 = user_data_for_session["Команды"]["2"]["Название"]
    team_3 = user_data_for_session["Команды"]["3"]["Название"]
    team_4 = user_data_for_session["Команды"]["4"]["Название"]
    team_5 = user_data_for_session["Команды"]["5"]["Название"]
    if request.method == 'POST':
        teams_1 = request.form['team_1']
        teams_2 = request.form['team_2']
        teams_3 = request.form['team_3']
        teams_4 = request.form['team_4']
        teams_5 = request.form['team_5']
        
        image_1 = request.form['image_1']
        image_2 = request.form['image_2']
        image_3 = request.form['image_3']
        image_4 = request.form['image_4']
        image_5 = request.form['image_5']
        print(teams_1)
        print(image_1,image_2,image_3,image_4,image_5)
        if teams_1:
            user_data_for_session["Команды"]["1"]["Статус"]=True
            user_data_for_session["Команды"]["1"]["Название"]=teams_1
            user_data_for_session["Команды"]["1"]["Картинка"]=image_1
        else:
            user_data_for_session["Команды"]["1"]["Статус"]=False
            user_data_for_session["Команды"]["1"]["Название"]=''
        if teams_2:
            user_data_for_session["Команды"]["2"]["Статус"]=True
            user_data_for_session["Команды"]["2"]["Название"]=teams_2
            user_data_for_session["Команды"]["2"]["Картинка"]=image_2
        else:
            user_data_for_session["Команды"]["2"]["Статус"]=False
            user_data_for_session["Команды"]["2"]["Название"]=''
        if teams_3:
            user_data_for_session["Команды"]["3"]["Статус"]=True
            user_data_for_session["Команды"]["3"]["Название"]=teams_3
            user_data_for_session["Команды"]["3"]["Картинка"]=image_3
        else:
            user_data_for_session["Команды"]["3"]["Статус"]=False
            user_data_for_session["Команды"]["3"]["Название"]=''
        if teams_4:
            user_data_for_session["Команды"]["4"]["Статус"]=True
            user_data_for_session["Команды"]["4"]["Название"]=teams_4
            user_data_for_session["Команды"]["4"]["Картинка"]=image_4
        else:
            user_data_for_session["Команды"]["4"]["Статус"]=False
            user_data_for_session["Команды"]["4"]["Название"]=''
        if teams_5:
            user_data_for_session["Команды"]["5"]["Статус"]=True
            user_data_for_session["Команды"]["5"]["Название"]=teams_5
            user_data_for_session["Команды"]["5"]["Картинка"]=image_5
        else:
            user_data_for_session["Команды"]["5"]["Статус"]=False
            user_data_for_session["Команды"]["5"]["Название"]=''
        return render_template('index_3.html')
    return render_template('index2.html', team_1 = team_1, team_2 = team_2, team_3 = team_3, team_4 = team_4, team_5 = team_5)

@app.route('/setings')
def set():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    return render_template('index_3.html')

@app.route('/save_set_1')
def save_set_1():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Длительность раунда"]["30"] == False:
        user_data_for_session["Длительность раунда"]["30"]=True
    else:
        user_data_for_session["Длительность раунда"]["30"]=False
    user_data_for_session["Длительность раунда"]["40"]=False
    user_data_for_session["Длительность раунда"]["50"]=False
    user_data_for_session["Длительность раунда"]["60"]=False
    user_data_for_session["Длительность раунда"]["120"]=False
    return render_template('index_3.html')

@app.route('/save_set_2')
def save_set_2():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Длительность раунда"]["40"] == False:
        user_data_for_session["Длительность раунда"]["40"]=True
    else:
        user_data_for_session["Длительность раунда"]["40"]=False
    user_data_for_session["Длительность раунда"]["30"]=False
    user_data_for_session["Длительность раунда"]["50"]=False
    user_data_for_session["Длительность раунда"]["60"]=False
    user_data_for_session["Длительность раунда"]["120"]=False
    return render_template('index_3.html')

@app.route('/save_set_3')
def save_set_3():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Длительность раунда"]["50"] == False:
        user_data_for_session["Длительность раунда"]["50"]=True
    else:
        user_data_for_session["Длительность раунда"]["50"]=False
    user_data_for_session["Длительность раунда"]["40"]=False
    user_data_for_session["Длительность раунда"]["30"]=False
    user_data_for_session["Длительность раунда"]["60"]=False
    user_data_for_session["Длительность раунда"]["120"]=False
    return render_template('index_3.html')

@app.route('/save_set_4')
def save_set_4():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Длительность раунда"]["60"] == False:
        user_data_for_session["Длительность раунда"]["60"]=True
    else:
        user_data_for_session["Длительность раунда"]["60"]=False
    user_data_for_session["Длительность раунда"]["40"]=False
    user_data_for_session["Длительность раунда"]["50"]=False
    user_data_for_session["Длительность раунда"]["30"]=False
    user_data_for_session["Длительность раунда"]["120"]=False
    return render_template('index_3.html')

@app.route('/save_set_5')
def save_set_5():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Длительность раунда"]["120"] == False:
        user_data_for_session["Длительность раунда"]["120"]=True
    else:
        user_data_for_session["Длительность раунда"]["120"]=False
    user_data_for_session["Длительность раунда"]["40"]=False
    user_data_for_session["Длительность раунда"]["50"]=False
    user_data_for_session["Длительность раунда"]["60"]=False
    user_data_for_session["Длительность раунда"]["30"]=False
    return render_template('index_3.html')

@app.route('/save_set_6')
def save_set_6():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Количество очков для победы"]["20"] == False:
        user_data_for_session["Количество очков для победы"]["20"]=True
    else:
        user_data_for_session["Количество очков для победы"]["20"]=False
    user_data_for_session["Количество очков для победы"]["30"]=False
    user_data_for_session["Количество очков для победы"]["50"]=False
    user_data_for_session["Количество очков для победы"]["60"]=False
    user_data_for_session["Количество очков для победы"]["80"]=False
    return render_template('index_3.html')

@app.route('/save_set_7')
def save_set_7():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Количество очков для победы"]["30"] == False:
        user_data_for_session["Количество очков для победы"]["30"]=True
    else:
        user_data_for_session["Количество очков для победы"]["30"]=False
    user_data_for_session["Количество очков для победы"]["20"]=False
    user_data_for_session["Количество очков для победы"]["50"]=False
    user_data_for_session["Количество очков для победы"]["60"]=False
    user_data_for_session["Количество очков для победы"]["80"]=False
    return render_template('index_3.html')

@app.route('/save_set_8')
def save_set_8():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Количество очков для победы"]["50"] == False:
        user_data_for_session["Количество очков для победы"]["50"]=True
    else:
        user_data_for_session["Количество очков для победы"]["50"]=False
    user_data_for_session["Количество очков для победы"]["30"]=False
    user_data_for_session["Количество очков для победы"]["20"]=False
    user_data_for_session["Количество очков для победы"]["60"]=False
    user_data_for_session["Количество очков для победы"]["80"]=False
    return render_template('index_3.html')

@app.route('/save_set_9')
def save_set_9():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Количество очков для победы"]["60"] == False:
        user_data_for_session["Количество очков для победы"]["60"]=True
    else:
        user_data_for_session["Количество очков для победы"]["60"]=False
    user_data_for_session["Количество очков для победы"]["30"]=False
    user_data_for_session["Количество очков для победы"]["50"]=False
    user_data_for_session["Количество очков для победы"]["20"]=False
    user_data_for_session["Количество очков для победы"]["80"]=False
    return render_template('index_3.html')

@app.route('/save_set_10')
def save_set_10():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Количество очков для победы"]["80"] == False:
        user_data_for_session["Количество очков для победы"]["80"]=True
    else:
        user_data_for_session["Количество очков для победы"]["80"]=False
    user_data_for_session["Количество очков для победы"]["30"]=False
    user_data_for_session["Количество очков для победы"]["50"]=False
    user_data_for_session["Количество очков для победы"]["60"]=False
    user_data_for_session["Количество очков для победы"]["20"]=False
    return render_template('index_3.html')

@app.route('/save')
def save():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    return render_template('index.html')

@app.route('/save_text_1')
def save_tex_1():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Базовый набор"] == True:
        user_data_for_session["Категория"]["Базовый набор"]=False
    else:
        user_data_for_session['Категория']["Базовый набор"]=True
    return render_template('index.html')

@app.route('/save_text_2')
def save_text_2():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["IT"] == True:
        user_data_for_session["Категория"]["IT"]=False
    else:
        user_data_for_session['Категория']["IT"]=True
    return render_template('index.html')

@app.route('/save_text_3')
def save_text_3():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Юриспруденция"] == True:
        user_data_for_session["Категория"]["Юриспруденция"]=False
    else:
        user_data_for_session['Категория']["Юриспруденция"]=True
    return render_template('index.html')

@app.route('/save_text_4')
def save_text_4():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Новый год"] == True:
        user_data_for_session["Категория"]["Новый год"]=False
    else:
        user_data_for_session['Категория']["Новый год"]=True
    return render_template('index.html')

@app.route('/save_text_5')
def save_text_5():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Marvel"] == True:
        user_data_for_session["Категория"]["Marvel"]=False
    else:
        user_data_for_session['Категория']["Marvel"]=True
    return render_template('index.html')

@app.route('/save_text_6')
def save_text_6():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Природа"] == True:
        user_data_for_session["Категория"]["Природа"]=False
    else:
        user_data_for_session['Категория']["Природа"]=True
    return render_template('index.html')

@app.route('/save_text_7')
def save_text_7():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Еда"] == True:
        user_data_for_session["Категория"]["Еда"]=False
    else:
        user_data_for_session['Категория']["Еда"]=True
    return render_template('index.html')

@app.route('/save_text_8')
def save_text_8():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Фильмы"] == True:
        user_data_for_session["Категория"]["Фильмы"]=False
    else:
        user_data_for_session['Категория']["Фильмы"]=True
    return render_template('index.html')

@app.route('/save_text_10')
def save_text_10():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if user_data_for_session["Категория"]["Свой набор"]["Статус"] == True:
        user_data_for_session["Категория"]["Свой набор"]["Статус"]=False
    else:
        user_data_for_session['Категория']["Свой набор"]["Статус"]=True
    return render_template('index.html')

@app.route('/save_text_9') ###
def save_text_9():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    return render_template('add_words.html')

@app.route('/add_word', methods=['POST'])
def add_word():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    word = request.json['word']
    print(word)
    words = []
    for i in range(1, 301):
        if not user_data_for_session["Категория"]["Свой набор"]["Слова"][str(i)]:
            user_data_for_session["Категория"]["Свой набор"]["Слова"][str(i)]=word
            break
    for j in range(1, 301):
            if user_data_for_session["Категория"]["Свой набор"]["Слова"][str(j)]:
                a = user_data_for_session["Категория"]["Свой набор"]["Слова"][str(j)]
                words.append(a)
    return jsonify({'words': words})

@app.route('/remove_word', methods=['POST'])
def remove_word():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    word = request.json['word']
    words = []
    for i in range(1, 301):
        if user_data_for_session["Категория"]["Свой набор"]["Слова"][str(i)] == word:
            user_data_for_session["Категория"]["Свой набор"]["Слова"][str(i)]=''
            break
    for j in range(1, 301):
            if user_data_for_session["Категория"]["Свой набор"]["Слова"][str(j)]:
                a = user_data_for_session["Категория"]["Свой набор"]["Слова"][str(j)]
                words.append(a)
    return jsonify({'words': words})

def db_dl():
    user_data_for_session = user_data.get(session['session_id'], {})
    slov_dl = user_data_for_session['Длительность раунда']
    result = ''
    for key, value in slov_dl.items():
        if slov_dl[key]:
            result=int(key)
            break
    return result

def db_och():
    user_data_for_session = user_data.get(session['session_id'], {})
    slov_och = user_data_for_session['Количество очков для победы']
    result = ''
    for key, value in slov_och.items():
        if slov_och[key]:
            result=int(key)
            break
    return result

class Game():
    def __init__(self) -> None:
        self.words = db_word()
        self.dl_raund = db_dl()
        self.och_pob = db_och()
        self.team_1 = team_vivod()
        self.flag = False

current_word = None
guessed_words = []
start_time = None
time_up = False
guessed_after_time_up = False

@app.route('/game', methods = ['GET', 'POST']) ###
def game():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    if prov_nast() == 'дл раунда':
        return 'Соси дл раунда'
    elif prov_nast() == 'кол-во команд':
        return 'Соси кол-во команд'
    elif prov_nast() == 'кол-во оч':
        return 'Соси кол-во оч'
    elif prov_nast() == 'свой набор':
        return 'Соси, ошибка с категорией Свой набор'
    elif prov_nast() == 'категории':
        return 'Соси, выбери категории'
    elif prov_nast():
        game = Game()
        global start_time, current_word, guessed_words, time_up, guessed_after_time_up  # Используем глобальные переменные
        if request.method == 'POST':
            if start_time is None:  # Игра еще не началась
                return jsonify({'error': 'Игра не началась'})
            if request.form['action'] == 'guess':
                if current_word is None:
                    return jsonify({'error': 'Слово не было загружено'})
                if time_up and guessed_after_time_up:  # Время вышло и кнопка "Отгадал" уже была нажата
                    return jsonify({'error': 'Вы уже нажали кнопку "Отгадал" после истечения времени'})
                if time_up:  # Время вышло
                    guessed_words = []  # Очищаем список угаданных слов
                    time_up = False  # Сбрасываем флаг истечения времени
                    guessed_after_time_up = True  # Устанавливаем флаг нажатия кнопки "Отгадал" после истечения времени
                    start_time = None  # Сбрасываем время начала игры
                else:
                    guessed_words.append(current_word)  # Добавляем текущее слово в список угаданных
                list_length = len(game.words)
                random_index = random.randint(0, list_length - 1)
                new_word = game.words[random_index]
                # new_word = random.choice([w for w in game.words if w not in guessed_words])
                current_word = new_word
                return jsonify({'new_word': new_word, 'team_1': game.team_1, 'guessed_words': guessed_words, 'time_up': time_up, 'guessed_after_time_up': guessed_after_time_up})
            elif request.form['action'] == 'guess_pr':
                if current_word is None:
                    return jsonify({'error': 'Слово не было загружено'})
                if time_up and guessed_after_time_up:  # Время вышло и кнопка "Отгадал" уже была нажата
                    return jsonify({'error': 'Вы уже нажали кнопку "Отгадал" после истечения времени'})
                if time_up:  # Время вышло
                    guessed_words = []  # Очищаем список угаданных слов
                    time_up = False  # Сбрасываем флаг истечения времени
                    guessed_after_time_up = True  # Устанавливаем флаг нажатия кнопки "Отгадал" после истечения времени
                    start_time = None  # Сбрасываем время начала игры
                else:
                    guessed_words.append(current_word)  # Добавляем текущее слово в список угаданных
                list_length = len(game.words)
                random_index = random.randint(0, list_length - 1)
                new_word = game.words[random_index]
                # random.choice([w for w in game.words if w not in guessed_words])
                current_word = new_word
                return jsonify({'new_word': new_word, 'team_1': game.team_1, 'guessed_words': guessed_words, 'time_up': time_up, 'guessed_after_time_up': guessed_after_time_up})
            else:
                return jsonify({'error': 'Неизвестное действие'})
        else:
            if start_time is None:  # Игра еще не началась
                current_word = random.choice(game.words)
                return render_template('game.html', team_1 = game.team_1, word=current_word, guessed_words=guessed_words, time_up=time_up, guessed_after_time_up=guessed_after_time_up)
            else:  # Игра уже идет
                word = current_word
                return render_template('game.html', team_1 = game.team_1, word=word, start_time=start_time, guessed_words=guessed_words, time_up=time_up, guessed_after_time_up=guessed_after_time_up)
    else:
        return 'Просто соси'

@app.route('/start_game', methods=['POST'])
def start_game():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    game = Game()
    global start_time, current_word, guessed_words, time_up, guessed_after_time_up
    if not guessed_after_time_up:  # Проверяем, что пользователь нажал кнопку "Отгадал" после истечения времени
        start_time = time.time()
        current_word = random.choice(game.words)
        guessed_words = []  # Очищаем список угаданных слов
        time_up = False  # Сбрасываем флаг истечения времени
        guessed_after_time_up = False  # Сбрасываем флаг нажатия кнопки "Отгадал" после истечения времени
        return jsonify({'word': current_word, 'team_1': game.team_1, 'start_time': start_time, 'guessed_words': guessed_words, 'time_up': time_up, 'guessed_after_time_up': guessed_after_time_up})
    else:
        return jsonify({'error': 'Вы должны нажать кнопку "Отгадал" после истечения времени, чтобы начать новую игру'})

@app.route('/result')
def result():
    game = Game()
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    team_com = []
    och_com = []
    image_com = []
    for key, value in user_data_for_session['Команды'].items():
        if user_data_for_session['Команды'][key]['Баллы'] >= game.och_pob:
            team_vin = user_data_for_session['Команды'][key]['Название']
        team_com.append(user_data_for_session['Команды'][key]['Название'])
        och_com.append(user_data_for_session['Команды'][key]['Баллы'])
        image_com.append(user_data_for_session['Команды'][key]['Картинка'])
    team_1 = team_com[0]
    och_1 = och_com[0]
    team_2 = team_com[1]
    och_2 = och_com[1]
    team_3 = team_com[2]
    och_3 = och_com[2]
    team_4 = team_com[3]
    och_4 = och_com[3]
    team_5 = team_com[4]
    och_5 = och_com[4]
    image_1_1 = image_com[0]
    image_2_2 = image_com[1]
    image_3_3 = image_com[2]
    image_4_4 = image_com[3]
    image_5_5 = image_com[4]
    return render_template('scoreCommand.html',team_vin = team_vin, image_1_1 = image_1_1, image_2_2 = image_2_2, image_3_3 = image_3_3, image_4_4 = image_4_4, image_5_5 = image_5_5, team_1 = team_1, och_1 = och_1, team_2 = team_2, och_2 = och_2, team_3 = team_3, och_3 = och_3, team_4 = team_4, och_4 = och_4, team_5 = team_5, och_5 = och_5,)

@app.route('/name_kom', methods = ['GET', 'POST'])
def name_kom():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    game = Game()
    if request.method == 'POST':
        data = request.get_json()
        teams_1 = data.get('team_1')
        team_new = ''
        chet = data.get('chet')
        for i in range(len(game.team_1) + 1):
            if i == len(game.team_1) - 1:
                team_new = game.team_1[0]
                break
            if game.team_1[i] == teams_1:
                team_new = game.team_1[i+1]
                break
        # print(chet, teams_1, team_new, game.och_pob)
        for key, value in user_data_for_session['Команды'].items():
            if user_data_for_session['Команды'][key]['Название'] == teams_1:
                user_data_for_session['Команды'][key]['Баллы']+=chet
                if user_data_for_session['Команды'][key]['Баллы'] >= game.och_pob:
                    game.flag = True
                break
        # print(user_data_for_session['Команды'][key]['Название'], teams_1)
        # print(user_data_for_session['Команды'][key]['Баллы'])
        # print(chet)
        # print(type(chet))
        return jsonify({'team_1': team_new, 'red_flag': game.flag})
    return redirect(url_for("main_str"))

@app.route('/time_1', methods = ['GET'])
def time_1():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    game = Game()
    data = {
        'time_1': game.dl_raund
    }
    return jsonify(data)

@app.route('/flag_kat', methods = ['GET'])
def flag_kat():
    user_data_for_session = user_data.get(session['session_id'], {})
    if not user_data_for_session:
        return redirect(url_for("main_str"))
    data = {
        'baza': user_data_for_session['Категория']['Базовый набор'],
        'marvel': user_data_for_session['Категория']['Marvel'],
        'it': user_data_for_session['Категория']['IT'],
        'film': user_data_for_session['Категория']['Фильмы'],
        'svoy_nav': user_data_for_session['Категория']['Свой набор']['Статус'],
        'eat': user_data_for_session['Категория']['Еда'],
        'new_yoer': user_data_for_session['Категория']['Новый год'],
        'nature': user_data_for_session['Категория']['Природа'],
        'ur': user_data_for_session['Категория']['Юриспруденция']
    }
    return jsonify(data)

if __name__ == '__main__':
    print(1)
    app.run(debug=True)